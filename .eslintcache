[{"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/index.js":"1","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/App.js":"2","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/PortfolioContainer.js":"3","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/Resume.js":"4","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/NavTabs.js":"5","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/projects.js":"6","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/About.js":"7","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/Contact.js":"8","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/SingleProject.js":"9","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/Footer.js":"10"},{"size":193,"mtime":1671008500975,"results":"11","hashOfConfig":"12"},{"size":157,"mtime":1671008500971,"results":"13","hashOfConfig":"12"},{"size":1222,"mtime":1671517485517,"results":"14","hashOfConfig":"12"},{"size":1276,"mtime":1671519241012,"results":"15","hashOfConfig":"12"},{"size":2461,"mtime":1671518405553,"results":"16","hashOfConfig":"12"},{"size":2529,"mtime":1671517810066,"results":"17","hashOfConfig":"12"},{"size":898,"mtime":1671518208125,"results":"18","hashOfConfig":"12"},{"size":2309,"mtime":1671521827335,"results":"19","hashOfConfig":"12"},{"size":817,"mtime":1671519395130,"results":"20","hashOfConfig":"12"},{"size":727,"mtime":1671518512780,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"lmprhd",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/index.js",[],["44","45"],"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/App.js",[],"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/PortfolioContainer.js",[],"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/Resume.js",[],"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/NavTabs.js",[],"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/projects.js",[],"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/About.js",[],"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/Contact.js",["46"],"import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nexport default function Contact() {\n  const validate = (event) => {\n    const value = event.target.value\n    // no email or invalid email\n    if (!value || !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      setIsEmailValid(false)\n    }\n    else {\n      setIsEmailValid(true)\n    }\n  };\n  const [isEmailValid, setIsEmailValid] = useState(true)\n\n  const nameRequired = (event) => {\n    const value = event.target.value\n    // no email or invalid email\n    if (!value) {\n      setIsnameRequired(false)\n    }\n    else {\n      setIsnameRequired(true)\n    }\n  };\n  const [isnameRequired, setIsnameRequired] = useState(true)\n\n  const messageRequired = (event) => {\n    const value = event.target.value\n    // no email or invalid email\n    if (!value) {\n      setIsmessageRequired(false)\n    }\n    else {\n      setIsmessageRequired(true)\n    }\n  };\n  const [ismessageRequired, setIsmessageRequired] = useState(true)\n\n\n\n  return (\n    <Form style={{\n      marginLeft: '25%',\n      width: '50%',\n      backgroundColor: '#727271',\n      color: 'white',\n      borderRadius: '10px'\n    }}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"Name\" placeholder=\"Full Name\" onBlur={nameRequired} />\n        {!isnameRequired && (\n          <p style={{ color: 'red' }}>Field Is Required</p>\n        )}\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"Email\" size=\"lg\" placeholder=\"Email\" onBlur={validate} />\n        {!isEmailValid && (\n          <p style={{ color: 'red' }}>Invalid email</p>\n        )}\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicMessage\">\n        <Form.Label>Message</Form.Label>\n        <Form.Control type=\"Message\" as=\"textarea\" size=\"lg\" placeholder=\"Message\" onBlur={messageRequired} />\n        {!ismessageRequired && (\n          <p style={{ color: 'red' }}>Field Is Required</p>\n        )}\n      </Form.Group>\n\n      <Button variant=\"warning\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n","/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/SingleProject.js",[],"/Users/andrewdippel/Documents/Coding Bootcamp/Portfolio/src/components/pages/Footer.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":12},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]